
doSort(nums, lower, high, flag) {
// 排序 mid 左边的数据
doSort(nums, lower, mid, 1);
// 排序 mid 右边的数据
doSort(nums, mid + 1, high, 2);

排序开始 doSort([6, 5, 4, 3, 2, 1], 0, 5)

    左排序 doSort([6, 5, 4, 3, 2, 1], 0, 2)
        左排序 doSort([6, 5, 4, 3, 2, 1], 0, 1)
            左排序 doSort([6, 5, 4, 3, 2, 1], 0, 0)    返回
            右排序 doSort([6, 5, 4, 3, 2, 1], 1, 1)    返回
            左排序 merge([6, 5, 4, 3, 2, 1], 0, 0, 1)
                nums=[5, 6, 4, 3, 2, 1]
        右排序 doSort([5, 6, 4, 3, 2, 1], 2, 2)    返回
        左排序 merge([5, 6, 4, 3, 2, 1], 0, 1, 2)
                nums=[4, 5, 6, 3, 2, 1]

    右排序 doSort([4, 5, 6, 3, 2, 1], 3, 5)
        左排序 doSort([4, 5, 6, 3, 2, 1], 3, 4)
            左排序 doSort([4, 5, 6, 3, 2, 1], 3, 3)    返回
            右排序 doSort([4, 5, 6, 3, 2, 1], 4, 4)    返回
            左排序 merge([4, 5, 6, 3, 2, 1], 3, 3, 4)
                nums=[4, 5, 6, 2, 3, 1]
        右排序 doSort([4, 5, 6, 2, 3, 1], 5, 5)    返回
        右排序 merge([4, 5, 6, 2, 3, 1], 3, 4, 5)
                nums=[4, 5, 6, 1, 2, 3]

排序结束 merge([4, 5, 6, 1, 2, 3], 0, 2, 5)
          nums=[1, 2, 3, 4, 5, 6]